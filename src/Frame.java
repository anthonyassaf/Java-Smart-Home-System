
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author anthony
 */
public class Frame extends javax.swing.JFrame {

    ArrayList<HComponent> homeComponents = new ArrayList<HComponent>();
    DefaultTableModel model;
    TableModel tableModel;
    SmartControl smartControl = new SmartControl();
    AirConditioner airConditioner = new AirConditioner();
    Fan fan = new Fan();
    SmartHomeController smartHomeController = new SmartHomeController(smartControl, airConditioner, fan);

    /**
     * Creates new form Frame
     */
    public Frame() throws UnknownHostException {
        initComponents();
        this.setLocationRelativeTo(null);
        smartControl.setSmartHomeMediator(smartHomeController);
        airConditioner.setSmartHomeMediator(smartHomeController);
        fan.setSmartHomeMediator(smartHomeController);
        model = (DefaultTableModel) table.getModel();
        fillArray();
        fillJtable();
    }

    public void fillArray() throws UnknownHostException {
        Connection connection = new Connection();
        DB db = connection.connect();
        DBCollection collection = db.getCollection("HomeComponents");
        DBCursor cursor = collection.find();

        for (DBObject c : cursor) {
            int number = (int) c.get("Number");
            String name = (String) c.get("Name");
            String status = (String) c.get("Status");
            HComponent hc = new HComponent(number, name, status);
            homeComponents.add(hc);
        }
    }

    public void fillJtable() {
        model.setRowCount(0);
        for (HComponent c : homeComponents) {
            String name = c.getName();
            int number = c.getNumber();
            model.insertRow(model.getRowCount(), new Object[] { number, name, "Off" });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        buttonOn = new javax.swing.JButton();
        buttonOff = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 100, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 100, Short.MAX_VALUE));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(52, 112, 175));

        jLabel1.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SMART HOME SYSTEM");

        table.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "Number", "Name", "Condition" }));
        jScrollPane1.setViewportView(table);

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 0, 8)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Anthony Assaf");

        buttonOn.setBackground(new java.awt.Color(45, 179, 15));
        buttonOn.setForeground(new java.awt.Color(255, 255, 255));
        buttonOn.setText("ON");
        buttonOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOnActionPerformed(evt);
            }
        });

        buttonOff.setBackground(new java.awt.Color(220, 69, 39));
        buttonOff.setForeground(new java.awt.Color(255, 255, 255));
        buttonOff.setText("OFF");
        buttonOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOffActionPerformed(evt);
            }
        });

        jButton1.setText("Check");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(97, 97, 97).addComponent(jLabel1,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 293,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup().addGap(44, 44, 44).addComponent(
                                        jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(46, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createSequentialGroup().addGap(119, 119, 119)
                        .addComponent(buttonOn, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonOff, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(
                                        jPanel2Layout.createSequentialGroup().addGap(22, 22, 22).addComponent(jLabel1))
                                .addGroup(
                                        jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(buttonOn).addComponent(buttonOff))
                                .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
                jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.PREFERRED_SIZE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateRow(int number, String status) {
        for (int i = 0; i < model.getRowCount(); i++)
            if (model.getValueAt(i, 0).equals(number))
                model.setValueAt(status, i, 2);
    }

    private void buttonOnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonOnActionPerformed
        tableModel = table.getModel();
        String newStatus = "On";

        if (table.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "You must select a row.", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            int index = table.getSelectedRow();
            int number = (int) tableModel.getValueAt(index, 0);
            String name = (String) tableModel.getValueAt(index, 1);
            String status = (String) tableModel.getValueAt(index, 2);
            updateRow(number, newStatus);
            switch (name) {
                case "Air Conditioner":
                    if (smartControl.isOn() && fan.isOn())
                        updateRow(3, "Off");
                    airConditioner.on();
                    break;
                case "Smart Home Controller":
                    if (airConditioner.isOn() && fan.isOn())
                        updateRow(3, "Off");
                    smartControl.on();
                    break;
                case "Fan":
                    if (smartControl.isOn() && airConditioner.isOn())
                        updateRow(2, "Off");
                    fan.on();
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "ERROR", "Alert", JOptionPane.WARNING_MESSAGE);
                    break;
            }

        }
    }// GEN-LAST:event_buttonOnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("AC on ? " + airConditioner.isOn());
        System.out.println("Fan on ? " + fan.isOn());
    }// GEN-LAST:event_jButton1ActionPerformed

    private void buttonOffActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonOffActionPerformed
        tableModel = table.getModel();
        String newStatus = "Off";

        if (table.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "You must select a row.", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            int index = table.getSelectedRow();
            int number = (int) tableModel.getValueAt(index, 0);
            String name = (String) tableModel.getValueAt(index, 1);
            String status = (String) tableModel.getValueAt(index, 2);
            updateRow(number, newStatus);
            switch (name) {
                case "Air Conditioner":
                    airConditioner.off();
                    break;
                case "Smart Home Controller":
                    smartControl.off();
                    break;
                case "Fan":
                    fan.off();
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "ERROR", "Alert", JOptionPane.WARNING_MESSAGE);
                    break;
            }

        }
    }// GEN-LAST:event_buttonOffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new Frame().setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOff;
    private javax.swing.JButton buttonOn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
